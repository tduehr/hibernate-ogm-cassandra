<!--
 ~ Hibernate OGM, Domain model persistence for NoSQL datastores
 ~
 ~ License: GNU Lesser General Public License (LGPL), version 2.1 or later
 ~ See the lgpl.txt file in the root directory or <http://www.gnu.org/licenses/lgpl-2.1.html>.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.hibernate.ogm</groupId>
        <artifactId>hibernate-ogm-cassandra-parent</artifactId>
        <version>5.3.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>hibernate-ogm-cassandra-modules</artifactId>
    <packaging>pom</packaging>

    <name>Hibernate OGM WildFly Module</name>
    <description>Hibernate OGM modules creation to use in WildFly</description>

    <properties>
        <module.xml.basedir>${basedir}/src/main/modules</module.xml.basedir>
        <module.xml.aliases.basedir>${basedir}/src/main/aliases</module.xml.aliases.basedir>
         <hibernate.ogm.module.slot>${parsedVersion.majorVersion}.${parsedVersion.minorVersion}</hibernate.ogm.module.slot>
        <hibernate.ogm.cassandra.module.slot>${hibernate.ogm.module.slot}</hibernate.ogm.cassandra.module.slot>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- Overriding the version used for tests in OGM (managed in the parent) with the one used by the C* driver -->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <optional>true</optional>
                <version>${cassandraGuavaVersion}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.hibernate.ogm</groupId>
            <artifactId>hibernate-ogm-cassandra</artifactId>
            <optional>true</optional>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-enforcer-plugin</artifactId>
                <configuration>
                    <!-- Skipping it because neo4j uses a different Lucene version -->
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.8.2</version>
                <configuration>
                    <altDeploymentRepository>internal.repo::default::file://${user.dir}/target/mvn-repo</altDeploymentRepository>
                </configuration>
            </plugin>
            <plugin>
                 <groupId>com.github.github</groupId>
                 <artifactId>site-maven-plugin</artifactId>
                 <version>0.12</version>
                 <configuration>
                     <message>Maven artifacts for ${project.version}</message>  <!-- git commit message -->
                     <noJekyll>true</noJekyll>                                  <!-- disable webpage processing -->
                     <outputDirectory>${user.dir}/target/mvn-repo</outputDirectory> <!-- matches distribution management repository url above -->
                     <branch>refs/heads/mvn-repo</branch>                       <!-- remote branch name -->
                     <includes><include>**/*</include></includes>
                     <repositoryName>hibernate-ogm-cassandra</repositoryName>      <!-- github repo name -->
                     <repositoryOwner>tduehr</repositoryOwner>    <!-- github username  -->
                 </configuration>
                 <executions>
                   <!-- run site-maven-plugin's 'site' target as part of the build's normal 'deploy' phase -->
                   <execution>
                     <goals>
                       <goal>site</goal>
                     </goals>
                     <phase>deploy</phase>
                   </execution>
                 </executions>
             </plugin>
        </plugins>
    </build>
</project>
